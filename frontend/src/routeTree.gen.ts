/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminRouteImport } from './routes/admin/route'
import { Route as AppRouteImport } from './routes/_app/route'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AppAboutImport } from './routes/_app/about'
import { Route as AdminEventsIndexImport } from './routes/admin/events/index'
import { Route as AdminArtistsIndexImport } from './routes/admin/artists/index'
import { Route as AppEventsIndexImport } from './routes/_app/events/index'
import { Route as AppArtistsIndexImport } from './routes/_app/artists/index'
import { Route as AdminMembersMemberIdImport } from './routes/admin/members/$memberId'
import { Route as AdminEventsCreateImport } from './routes/admin/events/create'
import { Route as AdminArtistsCreateImport } from './routes/admin/artists/create'
import { Route as AppEventsEventIdImport } from './routes/_app/events/$eventId'
import { Route as AppAuthRegisterImport } from './routes/_app/auth/register'
import { Route as AppAuthLoginImport } from './routes/_app/auth/login'
import { Route as AppArtistsArtistIdImport } from './routes/_app/artists/$artistId'
import { Route as AdminEventsEventIdEditImport } from './routes/admin/events/$eventId/edit'
import { Route as AdminArtistsArtistIdEditImport } from './routes/admin/artists/$artistId/edit'

// Create/Update Routes

const AdminRouteRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppAboutRoute = AppAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => AppRouteRoute,
} as any)

const AdminEventsIndexRoute = AdminEventsIndexImport.update({
  id: '/events/',
  path: '/events/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminArtistsIndexRoute = AdminArtistsIndexImport.update({
  id: '/artists/',
  path: '/artists/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AppEventsIndexRoute = AppEventsIndexImport.update({
  id: '/events/',
  path: '/events/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppArtistsIndexRoute = AppArtistsIndexImport.update({
  id: '/artists/',
  path: '/artists/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AdminMembersMemberIdRoute = AdminMembersMemberIdImport.update({
  id: '/members/$memberId',
  path: '/members/$memberId',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminEventsCreateRoute = AdminEventsCreateImport.update({
  id: '/events/create',
  path: '/events/create',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminArtistsCreateRoute = AdminArtistsCreateImport.update({
  id: '/artists/create',
  path: '/artists/create',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AppEventsEventIdRoute = AppEventsEventIdImport.update({
  id: '/events/$eventId',
  path: '/events/$eventId',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppAuthRegisterRoute = AppAuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppAuthLoginRoute = AppAuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppArtistsArtistIdRoute = AppArtistsArtistIdImport.update({
  id: '/artists/$artistId',
  path: '/artists/$artistId',
  getParentRoute: () => AppRouteRoute,
} as any)

const AdminEventsEventIdEditRoute = AdminEventsEventIdEditImport.update({
  id: '/events/$eventId/edit',
  path: '/events/$eventId/edit',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminArtistsArtistIdEditRoute = AdminArtistsArtistIdEditImport.update({
  id: '/artists/$artistId/edit',
  path: '/artists/$artistId/edit',
  getParentRoute: () => AdminRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/_app/about': {
      id: '/_app/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AppAboutImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/artists/$artistId': {
      id: '/_app/artists/$artistId'
      path: '/artists/$artistId'
      fullPath: '/artists/$artistId'
      preLoaderRoute: typeof AppArtistsArtistIdImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/auth/login': {
      id: '/_app/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AppAuthLoginImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/auth/register': {
      id: '/_app/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AppAuthRegisterImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/events/$eventId': {
      id: '/_app/events/$eventId'
      path: '/events/$eventId'
      fullPath: '/events/$eventId'
      preLoaderRoute: typeof AppEventsEventIdImport
      parentRoute: typeof AppRouteImport
    }
    '/admin/artists/create': {
      id: '/admin/artists/create'
      path: '/artists/create'
      fullPath: '/admin/artists/create'
      preLoaderRoute: typeof AdminArtistsCreateImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/events/create': {
      id: '/admin/events/create'
      path: '/events/create'
      fullPath: '/admin/events/create'
      preLoaderRoute: typeof AdminEventsCreateImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/members/$memberId': {
      id: '/admin/members/$memberId'
      path: '/members/$memberId'
      fullPath: '/admin/members/$memberId'
      preLoaderRoute: typeof AdminMembersMemberIdImport
      parentRoute: typeof AdminRouteImport
    }
    '/_app/artists/': {
      id: '/_app/artists/'
      path: '/artists'
      fullPath: '/artists'
      preLoaderRoute: typeof AppArtistsIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/events/': {
      id: '/_app/events/'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof AppEventsIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/admin/artists/': {
      id: '/admin/artists/'
      path: '/artists'
      fullPath: '/admin/artists'
      preLoaderRoute: typeof AdminArtistsIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/events/': {
      id: '/admin/events/'
      path: '/events'
      fullPath: '/admin/events'
      preLoaderRoute: typeof AdminEventsIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/artists/$artistId/edit': {
      id: '/admin/artists/$artistId/edit'
      path: '/artists/$artistId/edit'
      fullPath: '/admin/artists/$artistId/edit'
      preLoaderRoute: typeof AdminArtistsArtistIdEditImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/events/$eventId/edit': {
      id: '/admin/events/$eventId/edit'
      path: '/events/$eventId/edit'
      fullPath: '/admin/events/$eventId/edit'
      preLoaderRoute: typeof AdminEventsEventIdEditImport
      parentRoute: typeof AdminRouteImport
    }
  }
}

// Create and export the route tree

interface AppRouteRouteChildren {
  AppAboutRoute: typeof AppAboutRoute
  AppIndexRoute: typeof AppIndexRoute
  AppArtistsArtistIdRoute: typeof AppArtistsArtistIdRoute
  AppAuthLoginRoute: typeof AppAuthLoginRoute
  AppAuthRegisterRoute: typeof AppAuthRegisterRoute
  AppEventsEventIdRoute: typeof AppEventsEventIdRoute
  AppArtistsIndexRoute: typeof AppArtistsIndexRoute
  AppEventsIndexRoute: typeof AppEventsIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppAboutRoute: AppAboutRoute,
  AppIndexRoute: AppIndexRoute,
  AppArtistsArtistIdRoute: AppArtistsArtistIdRoute,
  AppAuthLoginRoute: AppAuthLoginRoute,
  AppAuthRegisterRoute: AppAuthRegisterRoute,
  AppEventsEventIdRoute: AppEventsEventIdRoute,
  AppArtistsIndexRoute: AppArtistsIndexRoute,
  AppEventsIndexRoute: AppEventsIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

interface AdminRouteRouteChildren {
  AdminArtistsCreateRoute: typeof AdminArtistsCreateRoute
  AdminEventsCreateRoute: typeof AdminEventsCreateRoute
  AdminMembersMemberIdRoute: typeof AdminMembersMemberIdRoute
  AdminArtistsIndexRoute: typeof AdminArtistsIndexRoute
  AdminEventsIndexRoute: typeof AdminEventsIndexRoute
  AdminArtistsArtistIdEditRoute: typeof AdminArtistsArtistIdEditRoute
  AdminEventsEventIdEditRoute: typeof AdminEventsEventIdEditRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminArtistsCreateRoute: AdminArtistsCreateRoute,
  AdminEventsCreateRoute: AdminEventsCreateRoute,
  AdminMembersMemberIdRoute: AdminMembersMemberIdRoute,
  AdminArtistsIndexRoute: AdminArtistsIndexRoute,
  AdminEventsIndexRoute: AdminEventsIndexRoute,
  AdminArtistsArtistIdEditRoute: AdminArtistsArtistIdEditRoute,
  AdminEventsEventIdEditRoute: AdminEventsEventIdEditRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AppRouteRouteWithChildren
  '/admin': typeof AdminRouteRouteWithChildren
  '/about': typeof AppAboutRoute
  '/': typeof AppIndexRoute
  '/artists/$artistId': typeof AppArtistsArtistIdRoute
  '/auth/login': typeof AppAuthLoginRoute
  '/auth/register': typeof AppAuthRegisterRoute
  '/events/$eventId': typeof AppEventsEventIdRoute
  '/admin/artists/create': typeof AdminArtistsCreateRoute
  '/admin/events/create': typeof AdminEventsCreateRoute
  '/admin/members/$memberId': typeof AdminMembersMemberIdRoute
  '/artists': typeof AppArtistsIndexRoute
  '/events': typeof AppEventsIndexRoute
  '/admin/artists': typeof AdminArtistsIndexRoute
  '/admin/events': typeof AdminEventsIndexRoute
  '/admin/artists/$artistId/edit': typeof AdminArtistsArtistIdEditRoute
  '/admin/events/$eventId/edit': typeof AdminEventsEventIdEditRoute
}

export interface FileRoutesByTo {
  '/admin': typeof AdminRouteRouteWithChildren
  '/about': typeof AppAboutRoute
  '/': typeof AppIndexRoute
  '/artists/$artistId': typeof AppArtistsArtistIdRoute
  '/auth/login': typeof AppAuthLoginRoute
  '/auth/register': typeof AppAuthRegisterRoute
  '/events/$eventId': typeof AppEventsEventIdRoute
  '/admin/artists/create': typeof AdminArtistsCreateRoute
  '/admin/events/create': typeof AdminEventsCreateRoute
  '/admin/members/$memberId': typeof AdminMembersMemberIdRoute
  '/artists': typeof AppArtistsIndexRoute
  '/events': typeof AppEventsIndexRoute
  '/admin/artists': typeof AdminArtistsIndexRoute
  '/admin/events': typeof AdminEventsIndexRoute
  '/admin/artists/$artistId/edit': typeof AdminArtistsArtistIdEditRoute
  '/admin/events/$eventId/edit': typeof AdminEventsEventIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteRouteWithChildren
  '/admin': typeof AdminRouteRouteWithChildren
  '/_app/about': typeof AppAboutRoute
  '/_app/': typeof AppIndexRoute
  '/_app/artists/$artistId': typeof AppArtistsArtistIdRoute
  '/_app/auth/login': typeof AppAuthLoginRoute
  '/_app/auth/register': typeof AppAuthRegisterRoute
  '/_app/events/$eventId': typeof AppEventsEventIdRoute
  '/admin/artists/create': typeof AdminArtistsCreateRoute
  '/admin/events/create': typeof AdminEventsCreateRoute
  '/admin/members/$memberId': typeof AdminMembersMemberIdRoute
  '/_app/artists/': typeof AppArtistsIndexRoute
  '/_app/events/': typeof AppEventsIndexRoute
  '/admin/artists/': typeof AdminArtistsIndexRoute
  '/admin/events/': typeof AdminEventsIndexRoute
  '/admin/artists/$artistId/edit': typeof AdminArtistsArtistIdEditRoute
  '/admin/events/$eventId/edit': typeof AdminEventsEventIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/admin'
    | '/about'
    | '/'
    | '/artists/$artistId'
    | '/auth/login'
    | '/auth/register'
    | '/events/$eventId'
    | '/admin/artists/create'
    | '/admin/events/create'
    | '/admin/members/$memberId'
    | '/artists'
    | '/events'
    | '/admin/artists'
    | '/admin/events'
    | '/admin/artists/$artistId/edit'
    | '/admin/events/$eventId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/admin'
    | '/about'
    | '/'
    | '/artists/$artistId'
    | '/auth/login'
    | '/auth/register'
    | '/events/$eventId'
    | '/admin/artists/create'
    | '/admin/events/create'
    | '/admin/members/$memberId'
    | '/artists'
    | '/events'
    | '/admin/artists'
    | '/admin/events'
    | '/admin/artists/$artistId/edit'
    | '/admin/events/$eventId/edit'
  id:
    | '__root__'
    | '/_app'
    | '/admin'
    | '/_app/about'
    | '/_app/'
    | '/_app/artists/$artistId'
    | '/_app/auth/login'
    | '/_app/auth/register'
    | '/_app/events/$eventId'
    | '/admin/artists/create'
    | '/admin/events/create'
    | '/admin/members/$memberId'
    | '/_app/artists/'
    | '/_app/events/'
    | '/admin/artists/'
    | '/admin/events/'
    | '/admin/artists/$artistId/edit'
    | '/admin/events/$eventId/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  AdminRouteRoute: AdminRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/admin"
      ]
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/about",
        "/_app/",
        "/_app/artists/$artistId",
        "/_app/auth/login",
        "/_app/auth/register",
        "/_app/events/$eventId",
        "/_app/artists/",
        "/_app/events/"
      ]
    },
    "/admin": {
      "filePath": "admin/route.tsx",
      "children": [
        "/admin/artists/create",
        "/admin/events/create",
        "/admin/members/$memberId",
        "/admin/artists/",
        "/admin/events/",
        "/admin/artists/$artistId/edit",
        "/admin/events/$eventId/edit"
      ]
    },
    "/_app/about": {
      "filePath": "_app/about.tsx",
      "parent": "/_app"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_app/artists/$artistId": {
      "filePath": "_app/artists/$artistId.tsx",
      "parent": "/_app"
    },
    "/_app/auth/login": {
      "filePath": "_app/auth/login.tsx",
      "parent": "/_app"
    },
    "/_app/auth/register": {
      "filePath": "_app/auth/register.tsx",
      "parent": "/_app"
    },
    "/_app/events/$eventId": {
      "filePath": "_app/events/$eventId.tsx",
      "parent": "/_app"
    },
    "/admin/artists/create": {
      "filePath": "admin/artists/create.tsx",
      "parent": "/admin"
    },
    "/admin/events/create": {
      "filePath": "admin/events/create.tsx",
      "parent": "/admin"
    },
    "/admin/members/$memberId": {
      "filePath": "admin/members/$memberId.tsx",
      "parent": "/admin"
    },
    "/_app/artists/": {
      "filePath": "_app/artists/index.tsx",
      "parent": "/_app"
    },
    "/_app/events/": {
      "filePath": "_app/events/index.tsx",
      "parent": "/_app"
    },
    "/admin/artists/": {
      "filePath": "admin/artists/index.tsx",
      "parent": "/admin"
    },
    "/admin/events/": {
      "filePath": "admin/events/index.tsx",
      "parent": "/admin"
    },
    "/admin/artists/$artistId/edit": {
      "filePath": "admin/artists/$artistId/edit.tsx",
      "parent": "/admin"
    },
    "/admin/events/$eventId/edit": {
      "filePath": "admin/events/$eventId/edit.tsx",
      "parent": "/admin"
    }
  }
}
ROUTE_MANIFEST_END */
